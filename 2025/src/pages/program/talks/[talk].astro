---
import DefaultLayout from '../../../layouts/DefaultLayout.astro'
import TalkStructuredData from '../../../components/TalkStructuredData.astro'
import { getCollection } from 'astro:content'
import { DateTime } from 'luxon'
import { SITE_CONFIG } from '../../../utils/constants'

const baseUrl = import.meta.env.BASE_URL

export async function getStaticPaths() {
  const talks = await getCollection('talks', ({ data }) => {
    return !['Break', 'Open'].includes(data.type)
  })

  return talks.map((talk) => {
    return {
      params: { talk: talk.data.slug },
      props: { talk },
    }
  })
}
const { talk } = Astro.props

// Clean description by removing HTML tags for meta description
const cleanDescription = talk.data.description ? talk.data.description.replace(/<[^>]*>/g, '').trim() : ''
const prefixedDescription = `Talk at ${SITE_CONFIG.eventName}: ${cleanDescription}`

// Create title with speaker names
const speakerNames = talk.data.speakers.map((s) => s.name).join(', ')
const fullTitle = `${talk.data.title} by ${speakerNames}`

function formatTime(timeString) {
  const talkTime = DateTime.fromISO(timeString)
  if (isNaN(talkTime)) {
    return 'TBD'
  } else {
    return talkTime.setZone('America/New_York').toFormat('h:mm a').toLowerCase()
  }
}
function formatDay(timeString) {
  const talkTime = DateTime.fromISO(timeString)
  if (isNaN(talkTime)) {
    return 'TBD'
  } else {
    return talkTime.setZone('America/New_York').toFormat('cccc')
  }
}
---

<DefaultLayout title={fullTitle} description={prefixedDescription}>
  <TalkStructuredData talk={talk} slot="head" />
  <section class="my-12">
    <div class="container">
      <h1>{talk.data.title}</h1>
      <p class="italic">
        {talk.data.type}<br />{formatDay(talk.data.start_time)} at {formatTime(talk.data.start_time)} in {
          talk.data.room
        }
      </p>
    </div>
  </section>
  <section class="container">
    {
      talk.data.youtube_url && (
        <iframe
          class="aspect-video w-full"
          src={'https://www.youtube.com/embed/' + talk.data.youtube_url.replace('https://youtu.be/', '')}
          title="YouTube video player"
          frameborder="0"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
          allowfullscreen
        />
      )
    }
  </section>
  <section class="my-12">
    <div class="space-content container">
      <Fragment set:html={talk.data.description} />
    </div>
  </section>
  <section>
    <div class="container">
      <h2>Presented by</h2>
      {
        talk.data.speakers.map((speaker) => (
          <p>
            <a href={`${baseUrl}/program/speakers/${speaker.slug}`}>{speaker.name}</a>
          </p>
        ))
      }
    </div>
  </section>
</DefaultLayout>
