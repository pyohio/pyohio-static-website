---
import DefaultLayout from '../../layouts/DefaultLayout.astro'
import { getCollection } from 'astro:content'
import { DateTime } from 'luxon'

const baseUrl = import.meta.env.BASE_URL

// Get the lightning talks data
const lightningTalks = await getCollection('talks', ({ data }) => {
  return data.title === 'Lightning Talks'
})

const lightningTalk = lightningTalks[0]

function formatTime(timeString) {
  const talkTime = DateTime.fromISO(timeString)
  if (isNaN(talkTime)) {
    return 'TBD'
  } else {
    return talkTime.setZone('America/New_York').toFormat('h:mm a').toLowerCase()
  }
}

function formatDay(timeString) {
  const talkTime = DateTime.fromISO(timeString)
  if (isNaN(talkTime)) {
    return 'TBD'
  } else {
    return talkTime.setZone('America/New_York').toFormat('cccc')
  }
}
---

<DefaultLayout title="Lightning Talks">
  <section class="my-12">
    <div class="container">
      <h1>Lightning Talks</h1>
      {
        lightningTalk && (
          <p class="italic">
            {formatDay(lightningTalk.data.start_time)} at {formatTime(lightningTalk.data.start_time)} in{' '}
            {lightningTalk.data.room}
          </p>
        )
      }
    </div>
  </section>

  <section class="my-12">
    <div class="space-content container">
      <p>
        Lightning Talks are quick 5-minute (hard limit!) talks on any topics of interest to the PyOhio community. Anyone
        can present a Lightning Talk. Yes, even you! Slides are encouraged but not required!
      </p>

      <h2>Sign-up Process</h2>
      <ul>
        <li>A sign-up board will be posted near registration</li>
        <li>Sign-ups will be open until 3:15pm on Saturday</li>
        <li>Talk order will be randomized</li>
        <li>Not all talks may be accepted if we receive too many submissions</li>
        <li>The final talk list and order will be published on this page by 3:45pm on Saturday</li>
      </ul>
    </div>
  </section>

  <section>
    <div class="space-content container">
      <h2>Talks</h2>
      <ol class="list-decimal list-inside">
        <li>Making Music with Code - Jessica Garson</li>
        <li>Porting CPython to CircuitPython - Alec Delaney</li>
        <li>The Beauty of Zipapps - Joe Kaufeld</li>
        <li>Goodbye to From - Christopher Neugebauer</li>
        <li>I AM NOT A PYTHON DEVELOPER - JR Rickerson</li>
        <li>My Agentic Coding UI - Ben Patch</li>
        <li>Hydroponics: Laziness, Hubris, Impatience - Elizabeth</li>
        <li>Import Accessibility as Default - Destiny O'Connor</li>
        <li>"Micro Python" - New Python for Vintage m68k Macs - Jeff Epler</li>
        <li>Wagtail - The #1 Python CMS - Vince Salvio</li>
        <li>Prompting without Prompting - Jayanaka Dantanarayana</li>
        <li>The BERT Advantage: Modern Topic Modeling - Mehul</li>
        <li>Super-setting Python for AI - Jason Mars</li>
      </ol>
    </div>
  </section>
</DefaultLayout>
