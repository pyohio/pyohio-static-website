TALK_EXTRAS = {}
# TALK_EXTRAS = {
#     # "XXXXXX": {
#     #     "title": "Example",
#     #     "youtube_url": "https://example.com/",
#     #     "content_warnings": None,
#     #     "video_start_time": "10:30:00",
#     #     "channel_id": 123456,
#     #     "channel_name": "Example Channel",
#     # },
#     "PMRREY": {
#         "title": "Welcome!",
#         "youtube_url": "https://youtu.be/MvuIu6l7i4o",
#         "content_warnings": None,
#         "video_start_time": "10:02:11",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "QUUBQS": {
#         "title": "Learn Just Enough Computer Science to Be a Better (Self-taught) Data Scientist/Engineer",
#         "youtube_url": "https://youtu.be/2WORtba6S18",
#         "content_warnings": None,
#         "video_start_time": "10:04:19",
#         "channel_id": 1185092014350540820,
#         "channel_name": "Learn Just Enough Computer Science to Be a Better (Self-taught) Data Scientist/Engineer",
#     },
#     "YSKVJE": {
#         "title": "Better Living Through Direnv",
#         "youtube_url": "https://youtu.be/FBfvjCzrs7Q",
#         "content_warnings": None,
#         "video_start_time": "10:18:32",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "VHEDH9": {
#         "title": "Who Put the Python in My Browser?! A Quick Guide to PyScript!",
#         "youtube_url": "https://youtu.be/nfqYepL0ykE",
#         "content_warnings": None,
#         "video_start_time": "10:33:21",
#         "channel_id": 1185338390669959261,
#         "channel_name": "Who Put the Python in My Browser?!",
#     },
#     "8FA883": {
#         "title": "Full-Stack Python with HTMX",
#         "youtube_url": "https://youtu.be/zR0qpPTvosI",
#         "content_warnings": None,
#         "video_start_time": "10:45:17",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "BREAK1": {
#         "title": "Break",
#         "youtube_url": "",
#         "content_warnings": None,
#         "video_start_time": "10:55:22",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "PCWTVG": {
#         "title": "Python's Magic for Machine Learning in 15 Minutes",
#         "youtube_url": "https://youtu.be/2_rYvaOjesQ",
#         "content_warnings": None,
#         "video_start_time": "11:00:00",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "XWKXML": {
#         "title": "(Not-so) Precise Float Arithmetic in Python",
#         "youtube_url": "https://youtu.be/tHW_ZUQoohM",
#         "content_warnings": None,
#         "video_start_time": "11:13:29",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "CTTQPZ": {
#         "title": "Iterate, Iterate, Iterate",
#         "youtube_url": "https://youtu.be/1WMLrn7IIEc",
#         "content_warnings": None,
#         "video_start_time": "11:25:10",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "QENEDH": {
#         "title": "Making Our Python Code More Accessible",
#         "youtube_url": "https://youtu.be/To1GASgqSek",
#         "content_warnings": None,
#         "video_start_time": "11:39:44",
#         "channel_id": 1185091827834048542,
#         "channel_name": "Making Our Python Code More Accessible",
#     },
#     "BREAK2": {
#         "title": "Break",
#         "youtube_url": "",
#         "content_warnings": None,
#         "video_start_time": "11:53:00",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "RXXMJE": {
#         "title": "Exploring OpenSearch, Python, and Serverless: Crafting Efficient and Modern Search Applications",
#         "youtube_url": "https://youtu.be/3tqLanasKUY",
#         "content_warnings": None,
#         "video_start_time": "12:00:00",
#         "channel_id": 1185091733269270671,
#         "channel_name": "Exploring OpenSearch, Python, and Serverless",
#     },
#     "HGFGD9": {
#         "title": "How to Test Your Cloud Code Confidently",
#         "youtube_url": "https://youtu.be/DyzAb4ra4DM",
#         "content_warnings": None,
#         "video_start_time": "12:13:19",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "EPWGVK": {
#         "title": "Orchestrating Workflows Is a 'cron-ic' Systems Problem. Airflow Is the Modern Solution.",
#         "youtube_url": "https://youtu.be/5wfy1Cofivw",
#         "content_warnings": None,
#         "video_start_time": "12:27:43",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "GXQXHT": {
#         "title": "Digital Signal Processing in Python: A MATLAB Alternative",
#         "youtube_url": "https://youtu.be/lpV9WNaFZd4",
#         "content_warnings": None,
#         "video_start_time": "12:43:13",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "BREAK3": {
#         "title": "Break",
#         "youtube_url": "",
#         "content_warnings": None,
#         "video_start_time": "12:53:43",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "9H3ASU": {
#         "title": "Mommy, How Are Objects Made? - by Dunder Seuss",
#         "youtube_url": "https://youtu.be/P6ZoR8Egkpg",
#         "content_warnings": None,
#         "video_start_time": "13:00:00",
#         "channel_id": 1185091608186720276,
#         "channel_name": "Mommy, How Are Objects Made",
#     },
#     "PMYX7X": {
#         "title": "Serverless Jupyter Notebook Functions",
#         "youtube_url": "https://youtu.be/mFfnJkhAglA",
#         "content_warnings": None,
#         "video_start_time": "13:04:53",
#         "channel_id": 1185091497880731719,
#         "channel_name": "Serverless Jupyter Notebook Functions",
#     },
#     "FEMGPT": {
#         "title": "From Code to Clarity: How Good Technical Documentation is the Key to Great Software",
#         "youtube_url": "https://youtu.be/hHsEYB06itU",
#         "content_warnings": None,
#         "video_start_time": "13:16:08",
#         "channel_id": 1185091384663879701,
#         "channel_name": "From Code to Clarity",
#     },
#     "FUYLYZ": {
#         "title": "Make Your Documentation Interactive with PyScript",
#         "youtube_url": "https://youtu.be/ysSewLZEqnM",
#         "content_warnings": None,
#         "video_start_time": "13:29:46",
#         "channel_id": 1185091267240140850,
#         "channel_name": "Make Your Documentation Interactive with PyScript",
#     },
#     "HLAWUG": {
#         "title": "Slaying Software Zombies with LLMs (and Lesser Incantations)",
#         "youtube_url": "https://youtu.be/MiPC9BwDdPA",
#         "content_warnings": None,
#         "video_start_time": "13:40:15",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "BREAK4": {
#         "title": "Break",
#         "youtube_url": "",
#         "content_warnings": None,
#         "video_start_time": "13:53:34",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "ATCNTJ": {
#         "title": "F-strings!",
#         "youtube_url": "https://youtu.be/SNA2O0NQl_Q",
#         "content_warnings": None,
#         "video_start_time": "14:00:00",
#         "channel_id": 1185090335165124638,
#         "channel_name": "F-strings!",
#     },
#     "8NSBJJ": {
#         "title": "Debugging Failing Pytest Tests in a Notebook",
#         "youtube_url": "https://youtu.be/90PuD9hNOyo",
#         "content_warnings": None,
#         "video_start_time": "14:09:41",
#         "channel_id": 1185090223982526576,
#         "channel_name": "Debugging Failing Pytest Tests in a Notebook",
#     },
#     "H9SQXW": {
#         "title": "How Many Times Can One Line Fail? ExceptionGroups & Except*: What They Are and How to Use Them",
#         "youtube_url": "https://youtu.be/3PyvWkQsjeM",
#         "content_warnings": None,
#         "video_start_time": "14:15:09",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "LEHCRT": {
#         "title": "Hamming it Up! Using Python with Ham Radio",
#         "youtube_url": "https://youtu.be/GWmfEaRvV1g",
#         "content_warnings": None,
#         "video_start_time": "14:25:33",
#         "channel_id": 1185089886471082044,
#         "channel_name": "Hamming it Up! Using Python with Ham Radio",
#     },
#     "VPBCKD": {
#         "title": "What Is the `Annotated` Type?",
#         "youtube_url": "https://youtu.be/5uyda0og04s",
#         "content_warnings": None,
#         "video_start_time": "14:39:07",
#         "channel_id": 1185089762307100774,
#         "channel_name": "What Is the `Annotated` Type",
#     },
#     "BREAK5": {
#         "title": "Break",
#         "youtube_url": "",
#         "content_warnings": None,
#         "video_start_time": "14:54:20",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "XWPYAC": {
#         "title": "Adafruit Circuit Playground Express as an “On Air” Light",
#         "youtube_url": "https://youtu.be/htqBik6sRNo",
#         "content_warnings": None,
#         "video_start_time": "15:00:00",
#         "channel_id": 1185089621865021500,
#         "channel_name": "Adafruit Circuit Playground Express as an “On Air” Light",
#     },
#     "EMJQGD": {
#         "title": "Build a Web Map with PyScript!",
#         "youtube_url": "https://youtu.be/eF2EQFaPEJg",
#         "content_warnings": None,
#         "video_start_time": "15:11:10",
#         "channel_id": 1185089464205328464,
#         "channel_name": "Build a Web Map with PyScript!",
#     },
#     "ZYP7RC": {
#         "title": "Web Scraping Crash Course! With Python and Scrapy",
#         "youtube_url": "https://youtu.be/L3B_9ooL3Uo",
#         "content_warnings": None,
#         "video_start_time": "15:21:50",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "ZMZAT7": {
#         "title": "Inequality Joins in Pandas with Pyjanitor",
#         "youtube_url": "https://youtu.be/AjdBLOAhgDI",
#         "content_warnings": None,
#         "video_start_time": "15:36:32",
#         "channel_id": 1185089311754948608,
#         "channel_name": "Inequality Joins in Pandas with Pyjanitor",
#     },
#     "BREAK6": {
#         "title": "Break",
#         "youtube_url": "",
#         "content_warnings": None,
#         "video_start_time": "15:52:28",
#         "channel_id": None,
#         "channel_name": None,
#     },
#     "FNBFMF": {
#         "title": "Glacial Refactoring: A Glacier-inspired Approach to Code Cleanup",
#         "youtube_url": "https://youtu.be/EEGSMkNOsLo",
#         "content_warnings": None,
#         "video_start_time": "16:00:00",
#         "channel_id": 1185089168041316372,
#         "channel_name": "Glacial Refactoring",
#     },
#     "GBGFXR": {
#         "title": "Animations from First Principles",
#         "youtube_url": "https://youtu.be/1JZLI23CxCE",
#         "content_warnings": None,
#         "video_start_time": "16:11:02",
#         "channel_id": 1185089024872943677,
#         "channel_name": "Animations from First Principles",
#     },
#     "YTBUGS": {
#         "title": "What I Learned in Three Years Writing Tests Live",
#         "youtube_url": "https://youtu.be/hdej-WqwpFw",
#         "content_warnings": None,
#         "video_start_time": "16:26:05",
#         "channel_id": 1185088862209454181,
#         "channel_name": "What I Learned in Three Years Writing Tests Live",
#     },
#     "XAQKZG": {
#         "title": "Thank You & Looking Ahead to PyOhio 2024",
#         "youtube_url": "https://youtu.be/52b4Tg74Fu0",
#         "content_warnings": None,
#         "video_start_time": "16:41:04",
#         "channel_id": None,
#         "channel_name": None,
#     },
# }

BREAKS = {
    "SATREG": {
        "code": "SATREG",
        "title": "Registration Opens",
        "start_time": "2024-07-27T08:00:00-04:00",
        "end_time": "2024-07-27T09:00:00-04:00",
        "type": "Break",
    },
    "BREAK1": {
        "code": "BREAK2",
        "title": "Break",
        "start_time": "2024-07-27T10:00:00-04:00",
        "end_time": "2024-07-27T10:15:00-04:00",
        "type": "Break",
    },
    "BREAK2": {
        "code": "BREAK3",
        "title": "Break",
        "start_time": "2024-07-27T10:45:00-04:00",
        "end_time": "2024-07-27T11:00:00-04:00",
        "type": "Break",
    },
    "BREAK3": {
        "code": "BREAK4",
        "title": "Break",
        "start_time": "2024-07-27T11:30:00-04:00",
        "end_time": "2024-07-27T11:45:00-04:00",
        "type": "Break",
    },
    "SATLUN": {
        "code": "SATLUN",
        "title": "Lunch Break",
        "start_time": "2024-07-27T12:15:00-04:00",
        "end_time": "2024-07-27T14:00:00-04:00",
        "type": "Break",
    },
    "BREAK4": {
        "code": "BREAK5",
        "title": "Break",
        "start_time": "2024-07-27T14:45:00-04:00",
        "end_time": "2024-07-27T15:00:00-04:00",
        "type": "Break",
    },
    "OPEN1": {
        "code": "OPEN1",
        "title": "open time slot",
        "start_time": "2024-07-27T15:00:00-04:00",
        "end_time": "2024-07-27T15:30:00-04:00",
        "type": "Open",
        "room": "Cattelya",
    },
    "BREAK5": {
        "code": "BREAK6",
        "title": "Break",
        "start_time": "2024-07-27T15:30:00-04:00",
        "end_time": "2024-07-27T15:45:00-04:00",
        "type": "Break",
    },
    "SATCLOSE": {
        "code": "SATCLOSE",
        "title": "Conference Space Closes",
        "start_time": "2024-07-27T18:30:00-04:00",
        "end_time": "2024-07-27T19:00:00-04:00",
        "type": "Break",
    },
    "SUNREG": {
        "code": "SUNREG",
        "title": "Registration Opens",
        "start_time": "2024-07-28T11:30:00-04:00",
        "end_time": "2024-07-28T12:00:00-04:00",
        "type": "Break",
    },
    "BREAK6": {
        "code": "BREAK7",
        "title": "Break",
        "start_time": "2024-07-28T12:15:00-04:00",
        "end_time": "2024-07-28T12:30:00-04:00",
        "type": "Break",
    },
    "BREAK7": {
        "code": "BREAK8",
        "title": "Break",
        "start_time": "2024-07-28T13:00:00-04:00",
        "end_time": "2024-07-28T13:15:00-04:00",
        "type": "Break",
    },
    "BREAK8": {
        "code": "BREAK9",
        "title": "Break",
        "start_time": "2024-07-28T13:45:00-04:00",
        "end_time": "2024-07-28T14:00:00-04:00",
        "type": "Break",
    },
    "BREAK9": {
        "code": "BREAK10",
        "title": "Break",
        "start_time": "2024-07-28T14:30:00-04:00",
        "end_time": "2024-07-28T14:45:00-04:00",
        "type": "Break",
    },
    "BREAK10": {
        "code": "BREAK11",
        "title": "Break",
        "start_time": "2024-07-28T15:15:00-04:00",
        "end_time": "2024-07-28T15:30:00-04:00",
        "type": "Break",
    },
}
# BREAKS = {
#     "BREAK1": {
#         "code": "BREAK1",
#         "title": "Break",
#         "start_time": "2023-12-16T10:55:00-05:00",
#         "end_time": "2023-12-16T11:00:00-05:00",
#         "type": "Break",
#         "stream_timestamp": "10:55:22",
#     },
#     "BREAK2": {
#         "code": "BREAK2",
#         "title": "Break",
#         "start_time": "2023-12-16T11:53:00-05:00",
#         "end_time": "2023-12-16T12:00:00-05:00",
#         "type": "Break",
#         "stream_timestamp": "11:53:00",
#     },
#     "BREAK3": {
#         "code": "BREAK3",
#         "title": "Break",
#         "start_time": "2023-12-16T12:54:00-05:00",
#         "end_time": "2023-12-16T13:00:00-05:00",
#         "type": "Break",
#         "stream_timestamp": "12:53:43",
#     },
#     "BREAK4": {
#         "code": "BREAK4",
#         "title": "Break",
#         "start_time": "2023-12-16T13:54:00-05:00",
#         "end_time": "2023-12-16T14:00:00-05:00",
#         "type": "Break",
#         "stream_timestamp": "13:53:34",
#     },
#     "BREAK5": {
#         "code": "BREAK5",
#         "title": "Break",
#         "start_time": "2023-12-16T14:55:00-05:00",
#         "end_time": "2023-12-16T15:00:00-05:00",
#         "type": "Break",
#         "stream_timestamp": "14:54:20",
#     },
#     "BREAK6": {
#         "code": "BREAK6",
#         "title": "Break",
#         "start_time": "2023-12-16T15:53:00-05:00",
#         "end_time": "2023-12-16T16:00:00-05:00",
#         "type": "Break",
#         "stream_timestamp": "15:52:28",
#     },
# }
